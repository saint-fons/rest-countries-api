{"version":3,"sources":["Components/Countries/Countries.module.css","Redux/CountriesSelector.js","Components/Countries/SearchCountries/SearchCountries.jsx","img/search-location-solid.svg","api/api.js","Redux/countriesReducer.js","Components/Countries/SearchCountries/SearchCountriesContainer.jsx","Components/Countries/Countries.jsx","Components/Countries/CountriesContainer.jsx","Components/Countries/CountryPage/Country.jsx","Components/Countries/CountryPage/CountryContainer.jsx","Components/Countries/CountryBorders/Bordes.jsx","Components/Countries/CountryBorders/BordersContainer.jsx","theme.js","global.js","img/moon-solid.svg","App.js","reportWebVitals.js","Redux/Redux-store.js","index.js"],"names":["module","exports","getCountriesSelector","state","updateCountriesSelector","listCountries","countriesSearch","getCountriesSuperSelector","createSelector","countries","filter","c","name","includes","getPageNameSuperSelector","countryPage","getBordersSuperSelector","alpha3Code","SearchCountries","props","countriesElements","React","createRef","className","s","SearchContainer","onChange","text","current","value","updateCountries","ref","placeholder","SearchTextAreaContainer","CountriesAPI","axios","get","then","response","data","SET_COUNTRIES","SET_COUNTRY_NAME_PAGE","SET_COUNTRY_NAME","UPDATE_NEW_COUNTRIES","initialState","countryNamePage","setCountryNameDispatch","type","countriesReducer","stateCopy","action","SearchCountriesContainer","this","Component","connect","dispatch","updateCountriesActionCreator","Countries","bodyContainer","map","flagsContainer","flagContainer","Flag","src","flag","alt","to","LinkStyle","MetaInfoCountry","population","region","capital","CountriesContainer","getCountries","Country","SingleFlag","SingleFlagContainer","SingleFlagImg","SingleFlagInfo","SingleFlagName","SingleMetaFlagInfo","nativeName","subregion","topLevelDomain","languages","l","borders","b","CountryContainer","country","match","params","prevProps","compose","withRouter","getCountryName","Borders","BordersContainer","prevState","snapshot","country1","lightTheme","body","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","useState","setTheme","onClick","Moon","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,cAAgB,iCAAiC,eAAiB,kCAAkC,cAAgB,iCAAiC,WAAa,8BAA8B,cAAgB,iCAAiC,eAAiB,kCAAkC,oBAAsB,uCAAuC,eAAiB,kCAAkC,mBAAqB,sCAAsC,gBAAkB,mCAAmC,UAAY,6BAA6B,wBAA0B,2CAA2C,gBAAkB,qC,qNCExqBC,EAAuB,SAACC,GACjC,OAAQA,GAGCC,EAA0B,SAACD,GACpC,OAAOA,EAAME,cAAcC,iBAGlBC,EAA4BC,YAAeN,GACpD,SAACC,GACG,OAAOA,EAAME,cAAcI,UAAUC,QAAQ,SAAAC,GAAC,OACzCA,EAAEC,KAAKC,SAASV,EAAME,cAAcC,uBAIpCQ,EAA2BN,YAAeN,GACnD,SAACC,GACG,OAAOA,EAAME,cAAcI,UAAUC,QAAQ,SAAAC,GAAC,OACzCA,EAAEC,KAAKC,SAASV,EAAME,cAAcU,mBAIpCC,EAA0BR,YAAeN,GAClD,SAACC,GACG,OAAOA,EAAME,cAAcI,UAAUC,QAAQ,SAAAC,GAAC,OACzCA,EAAEM,WAAWJ,SAASV,EAAME,cAAcU,mBCExCG,GC9BA,IDIO,SAACC,GAEnB,IAAIC,EAAoBC,IAAMC,YAO9B,OAAO,sBAAKC,UAAWC,IAAEC,gBAAlB,UACF,0BAAUC,SANO,WAClB,IAAIC,EAAOP,EAAkBQ,QAAQC,MACrCV,EAAMW,gBAAgBH,IAKXI,IAAMX,EACNS,MAAQV,EAAMb,gBAEd0B,YAAa,cACbT,UAAWC,IAAES,0BAGxB,8BACKd,EAAMb,uB,yBErBN4B,EAAe,WAEpB,OAAOC,IAAMC,IAAN,wCACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBL,EAAe,SAQTtB,GACX,OAAOuB,IAAMC,IAAN,gDAAmDxB,IACrDyB,MAAK,SAAAC,GACF,OAAOA,EAASC,SCV1BC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAmB,mBACnBC,EAAuB,uBAGzBC,EAAe,CACfnC,UAAW,CAAC,CACR,KAAQ,GACR,eAAkB,GAElB,WAAc,GACd,WAAc,GACd,aAAgB,GAEhB,QAAW,GACX,aAAgB,GAEhB,OAAU,GACV,UAAa,GACb,WAAc,KACd,OAAU,GAEV,QAAW,GACX,KAAQ,KACR,KAAQ,KACR,UAAa,GAEb,QAAW,GAEX,WAAc,GACd,YAAe,GACf,WAAc,GAEd,UAAa,GAEb,aAAgB,GAEhB,KAAQ,GACR,cAAiB,CACb,IAGJ,KAAQ,KAEZoC,gBAAiB,GACjBvC,gBAAiB,GACjBS,YAAa,MAsCJ+B,EAAyB,SAAClC,GAAD,MACjC,CAACmC,KAAML,EAAkB9B,SA6BfoC,EAhEU,WAAmC,IACpDC,EADkB9C,EAAiC,uDAAzByC,EAAcM,EAAW,uCAEvD,OAAQA,EAAOH,MACX,KAAKP,EACD,OAAO,2BACArC,GADP,IAEIM,UAAWyC,EAAOzC,YAEtB,KAAKgC,EAGD,OAFAQ,EAAS,eAAO9C,IACN0C,gBAAkBK,EAAOL,gBAC5BI,EAEX,KAAKN,EAGD,OAFAM,EAAS,eAAO9C,IACNG,gBAAkB4C,EAAO5C,gBAC5B2C,EAEX,KAAKP,EAGD,OAFAO,EAAS,eAAO9C,IACNY,YAAcmC,EAAOtC,KACxBqC,EAEf,QACI,OAAO9C,ICvEbgD,E,oNAME,OAAO,mCACH,cAAC,EAAD,CACI7C,gBAAiB8C,KAAKjC,MAAMb,gBAC5BwB,gBAAiBsB,KAAKjC,MAAMW,wB,GATLT,IAAMgC,WA8B9BC,eAdO,SAACnD,GACnB,MAAO,CACHG,gBAAiBF,EAAwBD,OAKxB,SAACoD,GACtB,MAAM,CACFzB,gBAAiB,SAACH,GAAU4B,ED2DQ,SAAC5B,GAAD,MACvC,CAAEoB,KAAMJ,EAAsBrC,gBAAiBqB,GC5DP6B,CAA6B7B,QAK3D2B,CACWH,G,QCeXM,EA/CC,SAACtC,GAEb,OAAO,qBAAKI,UAAWC,IAAEkC,cAAlB,SACH,gCACI,8BACI,cAAC,EAAD,MAGAvC,EAAMV,UAAUkD,KAAI,SAAAhD,GAAC,OAEjB,qBAAKY,UAAWC,IAAEoC,eAAlB,SACI,sBAAKrC,UAAWC,IAAEqC,cAAlB,UACI,qBAAKtC,UAAWC,IAAEsC,KAAMC,IAAKpD,EAAEqD,KAAMC,IAAK,SAC1C,8BACI,cAAC,IAAD,CAASC,GAAI,SAAWvD,EAAEC,KACjBW,UAAWC,IAAE2C,UADtB,SAGKxD,EAAEC,SAGX,gCACG,sBAAMW,UAAWC,IAAE4C,gBAAnB,yBAGEzD,EAAE0D,cAEP,gCACI,sBAAM9C,UAAWC,IAAE4C,gBAAnB,qBAGCzD,EAAE2D,UAEP,gCACI,sBAAM/C,UAAWC,IAAE4C,gBAAnB,sBAGCzD,EAAE4D,yBCnC7BC,E,kLAEEpB,KAAKjC,MAAMsD,iB,+BAKX,OAAO,mCACH,cAAC,EAAD,CACIhE,UAAW2C,KAAKjC,MAAMV,kB,GATLY,IAAMgC,WAwBxBC,eARO,SAACnD,GACnB,MAAO,CACHM,UAAWF,EAA0BJ,MAOzC,CAACsE,aHgEuB,WACxB,OAAO,SAAClB,GACJrB,IACKG,MAAK,SAAAC,GACFiB,EAjBX,CAACR,KAAMP,EAAe/B,UAiBW6B,UGrEvBgB,CACKkB,GCwCLE,EAnED,SAACvD,GAEX,OAAO,sBAAKI,UAAWC,IAAEmD,WAAlB,UACH,qBAAKpD,UAAWC,IAAE4C,gBAAlB,SACI,cAAC,IAAD,CAASF,GAAI,IACJ3C,UAAWC,IAAE2C,UADtB,oBAMJ,oCACIhD,EAAMV,UAAUkD,KAAI,SAAAhD,GAAC,OAEjB,sBAAKY,UAAWC,IAAEoD,oBAAlB,UACI,qBAAKrD,UAAWC,IAAEqD,cAAed,IAAKpD,EAAEqD,KAAMC,IAAK,SACnD,sBAAK1C,UAAWC,IAAEsD,eAAlB,UACI,qBAAKvD,UAAWC,IAAEuD,eAAlB,SACKpE,EAAEC,OAEP,sBAAKW,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAECzD,EAAE0D,cAEP,sBAAK9C,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,0BAECzD,EAAEsE,cAEP,sBAAK1D,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,sBAECzD,EAAE2D,UAEP,sBAAK/C,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAECzD,EAAEuE,aAEP,sBAAK3D,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,8BAECzD,EAAEwE,kBAEP,sBAAK5D,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAEIzD,EAAEyE,UAAUzB,KAAI,SAAA0B,GAAC,OAAIA,EAAEzE,WAG/B,gCACI,sBAAMW,UAAWC,IAAE4C,gBAAnB,uBAEIzD,EAAE2E,QAAQ3B,KAAI,SAAA4B,GAAC,OACV,cAAC,IAAD,CAAShE,UAAWC,IAAE4C,gBACbF,GAAI,WAAaqB,EAD1B,SAC8BA,0B,cCnD7DC,E,kLAEE,IAAIC,EAAUrC,KAAKjC,MAAMuE,MAAMC,OAAOF,QAEtCrC,KAAKjC,MAAM2B,uBAAuB2C,K,yCAGnBG,GACf,IAAIH,EAAUrC,KAAKjC,MAAMuE,MAAMC,OAAOF,QAClCrC,KAAKjC,MAAMsE,UAAYG,EAAUH,SACjCrC,KAAKjC,MAAM2B,uBAAuB2C,K,+BAMtC,OAAO,qCACH,8BACKrC,KAAKjC,MAAMsE,UAEhB,cAAC,EAAD,CACIhF,UAAW2C,KAAKjC,MAAMV,mB,GArBPY,IAAMgC,WAoCtBwC,cACXC,IAAWxC,aATO,SAACnD,GACnB,MAAO,CACHM,UAAWK,EAAyBX,MAQxC,CAAC4F,eL0DyB,SAACnF,GAC3B,OAAO,SAAC2C,GACJrB,EAA4BtB,GACvByB,MAAK,SAAAC,GACFiB,EAvBX,CAACR,KAAMP,EAAeK,gBAuBiBP,SK9DvBQ,2BAFN+C,CAEgCL,GC4BhCQ,E,uKAlEP,OAAO,sBAAKzE,UAAWC,IAAEmD,WAAlB,UACH,qBAAKpD,UAAWC,IAAE4C,gBAAlB,SACI,cAAC,IAAD,CAASF,GAAI,IACJ3C,UAAWC,IAAE2C,UADtB,oBAMJ,oCACIf,KAAKjC,MAAMV,UAAUkD,KAAI,SAAAhD,GAAC,OAEtB,sBAAKY,UAAWC,IAAEoD,oBAAlB,UACI,qBAAKrD,UAAWC,IAAEqD,cAAed,IAAKpD,EAAEqD,KAAMC,IAAK,SACnD,sBAAK1C,UAAWC,IAAEsD,eAAlB,UACI,qBAAKvD,UAAWC,IAAEuD,eAAlB,SACKpE,EAAEC,OAEP,sBAAKW,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAECzD,EAAE0D,cAEP,sBAAK9C,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,0BAECzD,EAAEsE,cAEP,sBAAK1D,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,sBAECzD,EAAE2D,UAEP,sBAAK/C,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAECzD,EAAEuE,aAEP,sBAAK3D,UAAWC,IAAEwD,mBAAlB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,8BAECzD,EAAEwE,kBAEP,sBAAM5D,UAAWC,IAAEwD,mBAAnB,UACI,sBAAMzD,UAAWC,IAAE4C,gBAAnB,yBAEIzD,EAAEyE,UAAUzB,KAAI,SAAA0B,GAAC,OAAIA,EAAEzE,WAG/B,gCACI,sBAAMW,UAAWC,IAAE4C,gBAAnB,uBAEIzD,EAAE2E,QAAQ3B,KAAI,SAAA4B,GAAC,OACV,cAAC,IAAD,CAAShE,UAAWC,IAAE4C,gBACbF,GAAI,WAAaqB,EAD1B,SAC8BA,6B,GAzDjDlE,IAAMgC,WCItB4C,E,kLAGE,IAAIR,EAAUrC,KAAKjC,MAAMuE,MAAMC,OAAOF,QAEtCrC,KAAKjC,MAAM2B,uBAAuB2C,K,yCAInBG,EAAWM,EAAWC,GACrC,IAAIC,EAAWhD,KAAKjC,MAAMuE,MAAMC,OAAOF,QAEpCW,IADYR,EAAUF,MAAMC,OAAOF,SAElCrC,KAAKjC,MAAM2B,uBAAuBsD,K,+BAKtC,OAAO,mCACH,cAAC,EAAD,CACI3F,UAAW2C,KAAKjC,MAAMV,UACtBgF,QAASrC,KAAKjC,MAAMsE,gB,GArBLpE,IAAMgC,WAoCtBwC,cACXC,IAAWxC,aATO,SAACnD,GACnB,MAAO,CACHM,UAAWO,EAAwBb,MAQvC,CAAC2C,2BAFU+C,CAEgBI,G,QC9ClBI,EAAa,CACtBC,KAAM,UACN3E,KAAM,UACN4E,aAAc,OACdC,SAAU,qCAGDC,EAAY,CACrBH,KAAM,UACN3E,KAAM,UACN4E,aAAc,UACdC,SAAU,qC,sgBCPP,IAAME,GAAeC,YAAH,KASP,qBAAGC,MAAkBN,QAC1B,qBAAGM,MAAkBjF,QAYrB,qBAAGiF,MAAkBjF,QC3BnB,OAA0B,uCCkE1BkE,mBAAQC,IAARD,EApDf,SAAa1E,GAAQ,IAAD,EAEU0F,mBAAS,SAFnB,mBAETD,EAFS,KAEFE,EAFE,KAahB,OACI,cAAC,IAAD,CAAeF,MAAiB,UAAVA,EAAoBP,EAAaI,EAAvD,SACI,qCACI,cAACC,GAAD,IACA,sBAAKnF,UAAW,SAAhB,UACI,sBAAMA,UAAW,kBAAjB,iCACA,yBAAQA,UAAW,cACXwF,QAjBJ,WAEZD,EADU,UAAVF,EACS,OAEA,UAYD,UAEI,qBAAK7C,IAAKiD,GACL/C,IAAK,WACL1C,UAAW,iBAJpB,kBAUJ,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,gCACI,cAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC1B,cAAC,EAAD,OAEJ,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAQ,kBAClC,cAAC,EAAD,OAGJ,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,OAAQ,kBACpC,cAAC,EAAD,sBC1CjBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCFVO,GAAWC,YAAgB,CAC3BxH,cAAe2C,IAIb8E,GAAmBC,OAAOC,sCAAwCnC,IAClEoC,GAAQC,YAAYN,GAAUE,GAAiBK,YAAgBC,QAErEL,OAAOM,UAAYJ,GAEJA,UCLfK,IAASnB,OACL,cAAC,IAAD,UACA,cAAC,IAAD,CAAUc,MAAOA,GAAjB,SACI,cAAC,GAAD,QAEcM,SAASC,eAAe,SAO9CpB,O","file":"static/js/main.f9eb4205.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Flag\":\"Countries_Flag__3er3F\",\"bodyContainer\":\"Countries_bodyContainer__1XYIn\",\"flagsContainer\":\"Countries_flagsContainer__3S9sl\",\"flagContainer\":\"Countries_flagContainer__p-ZEQ\",\"SingleFlag\":\"Countries_SingleFlag__3l5eV\",\"SingleFlagImg\":\"Countries_SingleFlagImg__3eRlE\",\"SingleFlagInfo\":\"Countries_SingleFlagInfo__167HM\",\"SingleFlagContainer\":\"Countries_SingleFlagContainer__3_F5I\",\"SingleFlagName\":\"Countries_SingleFlagName__3Tg_O\",\"SingleMetaFlagInfo\":\"Countries_SingleMetaFlagInfo__1wovN\",\"MetaInfoCountry\":\"Countries_MetaInfoCountry__2dE_m\",\"LinkStyle\":\"Countries_LinkStyle__30pYI\",\"SearchTextAreaContainer\":\"Countries_SearchTextAreaContainer__1NZsT\",\"SearchContainer\":\"Countries_SearchContainer__pGkOr\"};","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getCountriesSelector = (state) => {\r\n    return (state)\r\n}\r\n\r\nexport const updateCountriesSelector = (state) => {\r\n    return state.listCountries.countriesSearch\r\n}\r\n\r\nexport const getCountriesSuperSelector = createSelector(getCountriesSelector,\r\n    (state) => {\r\n        return state.listCountries.countries.filter( c =>\r\n            (c.name.includes(state.listCountries.countriesSearch)))\r\n    })\r\n\r\n\r\nexport const getPageNameSuperSelector = createSelector(getCountriesSelector,\r\n    (state) => {\r\n        return state.listCountries.countries.filter( c =>\r\n            (c.name.includes(state.listCountries.countryPage)))\r\n    })\r\n\r\n\r\nexport const getBordersSuperSelector = createSelector(getCountriesSelector,\r\n    (state) => {\r\n        return state.listCountries.countries.filter( c =>\r\n            (c.alpha3Code.includes(state.listCountries.countryPage)))\r\n    })\r\n\r\n\r\n","import React from 'react'\r\nimport s from \"./../Countries.module.css\"\r\nimport SearchIcon from \"./../../../img/search-location-solid.svg\"\r\n\r\nlet SearchCountries = (props) => {\r\n\r\n    let countriesElements = React.createRef();\r\n\r\n    let updateCountries = () => {\r\n        let text = countriesElements.current.value\r\n        props.updateCountries(text)\r\n    }\r\n\r\n    return <div className={s.SearchContainer}>\r\n         <textarea onChange={ updateCountries }\r\n                   ref={ countriesElements }\r\n                   value={ props.countriesSearch }\r\n\r\n                   placeholder={\"Search here\" }\r\n                   className={s.SearchTextAreaContainer}\r\n         >\r\n         </textarea>\r\n        <div>\r\n            {props.countriesSearch}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default SearchCountries","export default __webpack_public_path__ + \"static/media/search-location-solid.b2a39824.svg\";","import axios from 'axios';\r\n\r\nexport const CountriesAPI = {\r\n    getCountries() {\r\n        return axios.get(`https://restcountries.eu/rest/v2/all`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getCountryName(name) {\r\n        return axios.get(`https://restcountries.eu/rest/v2/name/${name}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {CountriesAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_COUNTRIES = 'SET-COUNTRIES'\r\nconst SET_COUNTRY_NAME_PAGE = 'SET_COUNTRY_NAME_PAGE'\r\nconst SET_COUNTRY_NAME = 'SET_COUNTRY_NAME'\r\nconst UPDATE_NEW_COUNTRIES = 'UPDATE_NEW_COUNTRIES'\r\n\r\n\r\nlet initialState = {\r\n    countries: [{\r\n        \"name\": \"\",\r\n        \"topLevelDomain\": [\r\n        ],\r\n        \"alpha2Code\": \"\",\r\n        \"alpha3Code\": \"\",\r\n        \"callingCodes\": [\r\n        ],\r\n        \"capital\": \"\",\r\n        \"altSpellings\": [\r\n        ],\r\n        \"region\": \"\",\r\n        \"subregion\": \"\",\r\n        \"population\": null,\r\n        \"latlng\": [\r\n        ],\r\n        \"demonym\": \"\",\r\n        \"area\": null,\r\n        \"gini\": null,\r\n        \"timezones\": [\r\n        ],\r\n        \"borders\": [\r\n        ],\r\n        \"nativeName\": \"\",\r\n        \"numericCode\": \"\",\r\n        \"currencies\": [\r\n        ],\r\n        \"languages\": [\r\n        ],\r\n        \"translations\": {\r\n        },\r\n        \"flag\": \"\",\r\n        \"regionalBlocs\": [\r\n            {\r\n            }\r\n        ],\r\n        \"cioc\": \"\"\r\n    }],\r\n    countryNamePage: [],\r\n    countriesSearch: \"\",\r\n    countryPage: null\r\n}\r\n\r\n\r\nconst countriesReducer = (state = initialState, action) => {\r\n    let stateCopy\r\n    switch (action.type) {\r\n        case SET_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countries: action.countries\r\n            }\r\n            case SET_COUNTRY_NAME_PAGE: {\r\n                stateCopy = {...state}\r\n                stateCopy.countryNamePage = action.countryNamePage\r\n                return stateCopy\r\n            }\r\n            case UPDATE_NEW_COUNTRIES: {\r\n                stateCopy = {...state}\r\n                stateCopy.countriesSearch = action.countriesSearch\r\n                return stateCopy\r\n            }\r\n            case SET_COUNTRY_NAME: {\r\n                stateCopy = {...state}\r\n                stateCopy.countryPage = action.name\r\n                return stateCopy\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCountries = (countries) =>\r\n    ({type: SET_COUNTRIES, countries})\r\n\r\nexport const setCountryNamePage = (countryNamePage) =>\r\n    ({type: SET_COUNTRIES, countryNamePage})\r\n\r\nexport const setCountryNameDispatch = (name) =>\r\n    ({type: SET_COUNTRY_NAME, name})\r\n\r\nexport const updateCountriesActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_COUNTRIES, countriesSearch: text})\r\n\r\n\r\n\r\nexport const getCountries = () => {\r\n    return (dispatch) => {\r\n        CountriesAPI.getCountries()\r\n            .then(response => {\r\n                dispatch(setCountries(response))\r\n            })\r\n    }\r\n}\r\n\r\nexport const getCountryName = (name) => {\r\n    return (dispatch) => {\r\n        CountriesAPI.getCountryName(name)\r\n            .then(response => {\r\n                dispatch(setCountryNamePage(response))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default countriesReducer","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {updateCountriesSelector} from \"../../../Redux/CountriesSelector\";\r\nimport SearchCountries from \"./SearchCountries\";\r\nimport {updateCountriesActionCreator} from \"../../../Redux/countriesReducer\";\r\n\r\n\r\nclass SearchCountriesContainer extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <SearchCountries\r\n                countriesSearch={this.props.countriesSearch}\r\n                updateCountries={this.props.updateCountries}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        countriesSearch: updateCountriesSelector(state)\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        updateCountries: (text) => {dispatch(updateCountriesActionCreator(text))},\r\n    }\r\n}\r\n\r\n\r\nexport default connect((mapStateToProps),\r\n    (mapDispatchToProps))(SearchCountriesContainer)\r\n","import React from 'react'\r\nimport s from './Countries.module.css'\r\nimport SearchCountriesContainer from \"./SearchCountries/SearchCountriesContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Countries = (props) => {\r\n\r\n    return <div className={s.bodyContainer}>\r\n        <div>\r\n            <div>\r\n                <SearchCountriesContainer/>\r\n            </div>\r\n            {\r\n                props.countries.map(c =>\r\n\r\n                    <div className={s.flagsContainer}>\r\n                        <div className={s.flagContainer}>\r\n                            <img className={s.Flag} src={c.flag} alt={\"flag\"}/>\r\n                            <div>\r\n                                <NavLink to={'/name/' + c.name}\r\n                                         className={s.LinkStyle}\r\n                                >\r\n                                    {c.name}\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                               <span className={s.MetaInfoCountry}>\r\n                                   Population:\r\n                               </span>\r\n                                {c.population}\r\n                            </div>\r\n                            <div>\r\n                                <span className={s.MetaInfoCountry}>\r\n                                Region:\r\n                                    </span>\r\n                                {c.region}\r\n                            </div>\r\n                            <div>\r\n                                <span className={s.MetaInfoCountry}>\r\n                                Capital:\r\n                                    </span>\r\n                                {c.capital}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Countries","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport {getCountries} from \"../../Redux/countriesReducer\";\r\nimport {getCountriesSuperSelector} from \"../../Redux/CountriesSelector\";\r\n\r\n\r\nclass CountriesContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getCountries()\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <Countries\r\n                countries={this.props.countries}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        countries: getCountriesSuperSelector(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect((mapStateToProps),\r\n    {getCountries})(CountriesContainer)\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Countries.module.css\";\r\n\r\n\r\nlet Country = (props) => {\r\n\r\n    return <div className={s.SingleFlag}>\r\n        <div className={s.MetaInfoCountry}>\r\n            <NavLink to={'/'}\r\n                     className={s.LinkStyle}\r\n            >\r\n                Home\r\n            </NavLink>\r\n        </div>\r\n        <div> {\r\n            props.countries.map(c =>\r\n\r\n                <div className={s.SingleFlagContainer}>\r\n                    <img className={s.SingleFlagImg} src={c.flag} alt={\"flag\"}/>\r\n                    <div className={s.SingleFlagInfo}>\r\n                        <div className={s.SingleFlagName}>\r\n                            {c.name}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}>Population:</span>\r\n\r\n                            {c.population}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}> NativeName:</span>\r\n\r\n                            {c.nativeName}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}> Region:</span>\r\n\r\n                            {c.region}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}> Subregion:</span>\r\n\r\n                            {c.subregion}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}> TopLevelDomain:</span>\r\n\r\n                            {c.topLevelDomain}\r\n                        </div>\r\n                        <div className={s.SingleMetaFlagInfo}>\r\n                            <span className={s.MetaInfoCountry}> languages;</span>\r\n                            {\r\n                                c.languages.map(l => l.name)\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <span className={s.MetaInfoCountry}> borders;</span>\r\n                            {\r\n                                c.borders.map(b =>\r\n                                    (<NavLink className={s.MetaInfoCountry}\r\n                                              to={'/border/' + b}>{b}</NavLink>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Country","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getPageNameSuperSelector} from \"../../../Redux/CountriesSelector\";\r\nimport {getCountryName, setCountryNameDispatch} from \"../../../Redux/countriesReducer\";\r\nimport Country from \"./Country\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n\r\nclass CountryContainer extends React.Component {\r\n    componentDidMount() {\r\n        let country = this.props.match.params.country\r\n        /*this.props.getCountryName(country)*/\r\n        this.props.setCountryNameDispatch(country)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let country = this.props.match.params.country\r\n        if (this.props.country !== prevProps.country) {\r\n            this.props.setCountryNameDispatch(country)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <div>\r\n                {this.props.country}\r\n            </div>\r\n            <Country\r\n                countries={this.props.countries}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        countries: getPageNameSuperSelector(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    withRouter,connect((mapStateToProps),\r\n    {getCountryName, setCountryNameDispatch}))(CountryContainer)\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Countries.module.css\";\r\n\r\n\r\nclass Borders extends React.Component {\r\n\r\n    render() {\r\n\r\n        return <div className={s.SingleFlag}>\r\n            <div className={s.MetaInfoCountry}>\r\n                <NavLink to={'/'}\r\n                         className={s.LinkStyle}\r\n                >\r\n                    Home\r\n                </NavLink>\r\n            </div>\r\n            <div> {\r\n                this.props.countries.map(c =>\r\n\r\n                    <div className={s.SingleFlagContainer}>\r\n                        <img className={s.SingleFlagImg} src={c.flag} alt={\"flag\"}/>\r\n                        <div className={s.SingleFlagInfo}>\r\n                            <div className={s.SingleFlagName}>\r\n                                {c.name}\r\n                            </div>\r\n                            <div className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}>Population:</span>\r\n\r\n                                {c.population}\r\n                            </div>\r\n                            <div className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}> NativeName:</span>\r\n\r\n                                {c.nativeName}\r\n                            </div>\r\n                            <div className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}> Region:</span>\r\n\r\n                                {c.region}\r\n                            </div>\r\n                            <div className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}> Subregion:</span>\r\n\r\n                                {c.subregion}\r\n                            </div>\r\n                            <div className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}> TopLevelDomain:</span>\r\n\r\n                                {c.topLevelDomain}\r\n                            </div>\r\n                            <div  className={s.SingleMetaFlagInfo}>\r\n                                <span className={s.MetaInfoCountry}> languages;</span>\r\n                                {\r\n                                    c.languages.map(l => l.name)\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <span className={s.MetaInfoCountry}> borders;</span>\r\n                                {\r\n                                    c.borders.map(b =>\r\n                                        (<NavLink className={s.MetaInfoCountry}\r\n                                                  to={'/border/' + b}>{b}</NavLink>))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default Borders","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getBordersSuperSelector} from \"../../../Redux/CountriesSelector\";\r\nimport {setCountryNameDispatch} from \"../../../Redux/countriesReducer\";\r\nimport Borders from \"./Bordes\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n\r\nclass BordersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let country = this.props.match.params.country\r\n        /*this.props.getCountryName(country)*/\r\n        this.props.setCountryNameDispatch(country)\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let country1 = this.props.match.params.country\r\n        let country2 = prevProps.match.params.country\r\n        if(country1 !== country2) {\r\n            this.props.setCountryNameDispatch(country1)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Borders\r\n                countries={this.props.countries}\r\n                country={this.props.country}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        countries: getBordersSuperSelector(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    withRouter,connect((mapStateToProps),\r\n    {setCountryNameDispatch}))(BordersContainer)\r\n\r\n","// theme.js\r\nexport const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n}\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n}","// global.js\r\n// Source: https://github.com/maximakymenko/react-day-night-toggle-app/blob/master/src/global.js#L23-L41\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    align-items: center;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  \r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/moon-solid.a3325cc3.svg\";","import './App.css';\nimport CountriesContainer from \"./Components/Countries/CountriesContainer\";\nimport CountryContainer from \"./Components/Countries/CountryPage/CountryContainer\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router\";\nimport {Route} from \"react-router-dom\";\nimport BordersContainer from \"./Components/Countries/CountryBorders/BordersContainer\";\nimport {ThemeProvider} from 'styled-components';\nimport {lightTheme, darkTheme} from './theme';\nimport {GlobalStyles} from './global';\nimport React, {useState} from 'react';\nimport Moon from \"./img/moon-solid.svg\"\n\n\nfunction App(props) {\n\n    const [theme, setTheme] = useState('light');\n    const toggleTheme = () => {\n        if (theme === 'light') {\n            setTheme('dark');\n        } else {\n            setTheme('light');\n        }\n    }\n\n\n    /*let {country} = props.match.params*/\n    return (\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n            <>\n                <GlobalStyles/>\n                <div className={\"Header\"}>\n                    <span className={\"HeaderWhereWord\"}>Where in the world?</span>\n                    <button className={\"ThemeButton\"}\n                            onClick={toggleTheme}>\n                        <img src={Moon}\n                             alt={\"DarkMode\"}\n                             className={\"DarkThemeSVG\"}\n                        />\n                        Dark mode\n                    </button>\n                </div>\n\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <div>\n                            <Route exact path='/' render={() =>\n                                <CountriesContainer/>}/>\n\n                            <Route path='/name/:country?' render={() =>\n                                <CountryContainer\n                                />}/>\n\n                            <Route path='/border/:country?' render={() =>\n                                <BordersContainer\n                                />}/>\n\n                        </div>\n                    </header>\n                </div>\n            </>\n        </ThemeProvider>\n\n    );\n}\n\nexport default compose(withRouter)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\"\r\nimport countriesReducer from \"./countriesReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    listCountries: countriesReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from \"./Redux/Redux-store\"\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}